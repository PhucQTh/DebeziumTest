version: '3'
services:
  # zookeeper
  zookeeper:
    container_name: zookeeper
    image: debezium/zookeeper:latest
    networks:
      - ui-network
    environment:
      - TZ=Asia/Bangkok
  # kafka
  kafka:
    container_name: kafka
    image: debezium/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - TZ=Asia/Bangkok
    networks:
      - ui-network
  # kafka-ui
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8980:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - TZ=Asia/Bangkok
    depends_on:
      - kafka
    networks:
      - ui-network
  # debezium-ui
  debezium-ui:
    container_name: debezium-ui
    image: debezium/debezium-ui:2.4
    ports:
      - "3000:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://debezium-connect:8083
      - TZ=Asia/Bangkok
    depends_on:
      - debezium-connect
    networks:
      - ui-network
      #DBZIUM CONneCT
  debezium-connect:
    container_name: debezium-connect
    image: debezium/connect-jdbc
    build:
      context: debezium-jdbc
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - ENABLE_DEBEZIUM_KC_REST_EXTENSION=true
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension
      - CONNECT_REST_ACCESS_CONTROL_ALLOW_ORIGIN="*"
      - CONNECT_REST_ACCESS_CONTROL_ALLOW_METHODS="GET,POST,PUT,DELETE"
      - CONNECT_REST_ACCESS_CONTROL_ALLOW_HEADERS="origin,content-type,accept,authorization"
      # - PLUGIN_PATH = /usr/share/java
      - TZ=Asia/Bangkok
    networks:
      - ui-network
  # ////////////
networks:
  ui-network:
    external: false
